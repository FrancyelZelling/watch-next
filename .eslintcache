[{"/mnt/LinuxData/Coding/learn-redux-typescript/src/components/MovieDetails.tsx":"1","/mnt/LinuxData/Coding/learn-redux-typescript/src/components/MovieComponent.tsx":"2","/mnt/LinuxData/Coding/learn-redux-typescript/src/features/movie/movieSlice.ts":"3","/mnt/LinuxData/Coding/learn-redux-typescript/src/components/MovieList.tsx":"4","/mnt/LinuxData/Coding/learn-redux-typescript/src/components/MovieItem.tsx":"5","/mnt/LinuxData/Coding/learn-redux-typescript/src/features/counter/counterSlice.ts":"6","/mnt/LinuxData/Coding/learn-redux-typescript/src/App.tsx":"7","/mnt/LinuxData/Coding/learn-redux-typescript/src/app/store.ts":"8","/mnt/LinuxData/Coding/learn-redux-typescript/src/components/LoginPage.tsx":"9","/mnt/LinuxData/Coding/learn-redux-typescript/src/components/Header.tsx":"10","/mnt/LinuxData/Coding/learn-redux-typescript/src/components/Movies.tsx":"11","/mnt/LinuxData/Coding/learn-redux-typescript/src/users.ts":"12","/mnt/LinuxData/Coding/learn-redux-typescript/src/components/MainPage.tsx":"13"},{"size":701,"mtime":1609507478368,"results":"14","hashOfConfig":"15"},{"size":454,"mtime":1609334689040,"results":"16","hashOfConfig":"15"},{"size":5233,"mtime":1609505296621,"results":"17","hashOfConfig":"15"},{"size":639,"mtime":1609509627103,"results":"18","hashOfConfig":"15"},{"size":1068,"mtime":1609499183638,"results":"19","hashOfConfig":"15"},{"size":1851,"mtime":1609063074153,"results":"20","hashOfConfig":"15"},{"size":716,"mtime":1609510261287,"results":"21","hashOfConfig":"15"},{"size":499,"mtime":1609080335637,"results":"22","hashOfConfig":"15"},{"size":1060,"mtime":1609509737491,"results":"23","hashOfConfig":"15"},{"size":1149,"mtime":1609509932697,"results":"24","hashOfConfig":"15"},{"size":618,"mtime":1609505590091,"results":"25","hashOfConfig":"15"},{"size":201,"mtime":1609424431072,"results":"26","hashOfConfig":"15"},{"size":859,"mtime":1609510091098,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9qsb2c",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/LinuxData/Coding/learn-redux-typescript/src/components/MovieDetails.tsx",[],"/mnt/LinuxData/Coding/learn-redux-typescript/src/components/MovieComponent.tsx",[],"/mnt/LinuxData/Coding/learn-redux-typescript/src/features/movie/movieSlice.ts",["57"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk, RootState } from \"../../app/store\";\nimport axios from \"axios\";\n\ninterface MovieState {\n  title: string;\n  resultMovies: Movie[];\n  moviesList: Movie[];\n  movieResult: Movie | null;\n  loggedIn: boolean;\n  user: string | null;\n}\n\nexport interface Movie {\n  id: number;\n  title: string;\n  poster_path: string;\n  overview: string;\n}\n\ninterface MovieResults {\n  page: number;\n  results: Movie[];\n  total_pages: number;\n  total_results: number;\n}\n\ninterface LocalStorageMovies {\n  username: string;\n  movies: Movie[];\n}\n\nconst keyLSMovies = \"movies\";\nconst keyLSUser = \"username\";\n\nconst initialState: MovieState = {\n  title: \"ZUpa\",\n  user: null,\n  resultMovies: [],\n  moviesList: [],\n  movieResult: null,\n  loggedIn: false,\n};\n\nconst token =\n  \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2OTBhOWQ3OWU5OTAwMThjNGU1OTBlNWM2MDQ4YmNmMiIsInN1YiI6IjVmZTg4OGUzY2YxYWZkMDAzYzg1MzNmOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.O1dU6Xyq8NDASO58Xhwgemoxw9dmHW-q_Qza2oB968s\";\n\nexport const movieSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n\n      state.title = \"velizes & fuzirosn\";\n    },\n    addMovieToList: (state: MovieState, action: PayloadAction<Movie>) => {\n      const check = state.moviesList.find(\n        (movie) => movie.id === action.payload.id\n      );\n      if (check === undefined) {\n        state.moviesList.push(action.payload);\n      }\n    },\n    removeMovieFromList: (state: MovieState, action: PayloadAction<number>) => {\n      const index = state.moviesList.findIndex(\n        (movie) => movie.id === action.payload\n      );\n      console.log(index);\n      state.moviesList.splice(index, 1);\n    },\n    setMovie: (state: MovieState, action: PayloadAction<Movie>) => {\n      state.movieResult = action.payload;\n    },\n    setResults: (state: MovieState, action: PayloadAction<Movie[]>) => {\n      state.resultMovies = action.payload;\n      console.log(action.payload);\n    },\n    setUser: (state: MovieState, action: PayloadAction<string>) => {\n      state.user = action.payload;\n    },\n    setLogin: (state: MovieState, action: PayloadAction<boolean>) => {\n      state.loggedIn = action.payload;\n    },\n    setLocalStorageMovies: (state: MovieState) => {\n      const data: LocalStorageMovies = {\n        username: state.user!,\n        movies: state.moviesList,\n      };\n      const movies = JSON.stringify(data);\n      localStorage.setItem(keyLSMovies, movies);\n    },\n    getLocalStorageMovies: (state: MovieState) => {\n      const data = localStorage.getItem(keyLSMovies);\n\n      if (data) {\n        const lsItems: LocalStorageMovies = JSON.parse(data);\n        console.log(lsItems);\n        if (lsItems.username === state.user) {\n          state.moviesList = lsItems.movies;\n        }\n      }\n    },\n  },\n});\n\nexport const {\n  increment,\n  addMovieToList,\n  removeMovieFromList,\n  setMovie,\n  setResults,\n  setUser,\n  setLogin,\n  setLocalStorageMovies,\n  getLocalStorageMovies,\n} = movieSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const findMovie = (id: string): AppThunk => async (dispatch) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n    params: {\n      language: \"pt-BR\",\n    },\n  });\n  console.log(response);\n  const movie: Movie = response.data;\n\n  dispatch(setMovie(movie));\n};\n\nexport const searchMovies = (query: string): AppThunk => async (dispatch) => {\n  const response = await axios.get(\n    \"https://api.themoviedb.org/3/search/movie\",\n    {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      params: {\n        language: \"pt-BR\",\n        query: query,\n      },\n    }\n  );\n  const movies: MovieResults = response.data;\n\n  dispatch(setResults(movies.results));\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectTitle = (state: RootState) => state.movies.title;\nexport const moviesList = (state: RootState) => state.movies.moviesList;\nexport const resultMovies = (state: RootState) => state.movies.resultMovies;\nexport const movieResult = (state: RootState) => state.movies.movieResult;\nexport const loggedIn = (state: RootState) => state.movies.loggedIn;\nexport const user = (state: RootState) => state.movies.user;\n\nexport default movieSlice.reducer;\n","/mnt/LinuxData/Coding/learn-redux-typescript/src/components/MovieList.tsx",[],"/mnt/LinuxData/Coding/learn-redux-typescript/src/components/MovieItem.tsx",[],"/mnt/LinuxData/Coding/learn-redux-typescript/src/features/counter/counterSlice.ts",[],"/mnt/LinuxData/Coding/learn-redux-typescript/src/App.tsx",[],"/mnt/LinuxData/Coding/learn-redux-typescript/src/app/store.ts",[],["58","59"],"/mnt/LinuxData/Coding/learn-redux-typescript/src/components/LoginPage.tsx",["60"],"import React, { useState } from \"react\";\nimport {\n  setLogin as SetLogin,\n  setUser,\n  user as User,\n} from \"../features/movie/movieSlice\";\nimport { useDispatch } from \"react-redux\";\nimport users from \"../users\";\n\nfunction LoginPage() {\n  const dispatch = useDispatch();\n\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const checkCredentials = () => {\n    const result = users.filter(\n      (user) => user.login === login && user.password === password\n    );\n    if (result.length > 0) {\n      dispatch(setUser(login));\n      dispatch(SetLogin(true));\n    } else {\n      alert(\"Invalid Credentials\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login Page</h2>\n      <input\n        type=\"text\"\n        name=\"login\"\n        onChange={(event) => setLogin(event.target.value)}\n      />\n      <input\n        type=\"password\"\n        name=\"password\"\n        onChange={(event) => setPassword(event.target.value)}\n      />\n      <button onClick={checkCredentials}>send</button>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","/mnt/LinuxData/Coding/learn-redux-typescript/src/components/Header.tsx",[],"/mnt/LinuxData/Coding/learn-redux-typescript/src/components/Movies.tsx",[],"/mnt/LinuxData/Coding/learn-redux-typescript/src/users.ts",[],"/mnt/LinuxData/Coding/learn-redux-typescript/src/components/MainPage.tsx",[],{"ruleId":"61","severity":1,"message":"62","line":34,"column":7,"nodeType":"63","messageId":"64","endLine":34,"endColumn":16},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"61","severity":1,"message":"69","line":5,"column":11,"nodeType":"63","messageId":"64","endLine":5,"endColumn":15},"@typescript-eslint/no-unused-vars","'keyLSUser' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"'User' is defined but never used.","no-global-assign","no-unsafe-negation"]